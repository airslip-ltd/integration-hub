name: Dev - Build and Deploy

on:
 workflow_dispatch:
 push:
   branches:
     - main

jobs:
  deploy-web-app-dev:
    runs-on: ubuntu-latest
    environment: Development
    env:
      DOTNET_CORE_VERSION: 6.0.x
      TERRAFORM_MODULE_VERSION: 6.3.2
      ENVIRONMENT_NAME: Development
      ENVIRONMENT_NAME_SHORT: dev
      BUILD_PATH: ./src/Airslip.IntegrationHub.sln
      APPSERVICE_NAME: integration-hub
      PUBLISH_PATH: ./src/Airslip.IntegrationHub
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1.7.2
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: false

    - uses: cschleiden/replace-tokens@v1
      with:
        files: '["${{ env.PUBLISH_PATH }}/*.json"]'
      env:
        LOGZ_IO_AUTH_TOKEN: ${{ secrets.LOGZ_IO_AUTH_TOKEN }}
        LOGZ_IO_ENVIRONMENT: ${{ env.ENVIRONMENT_NAME }}
        LOGZ_IO_SERVICE_NAME: ${{ env.APPSERVICE_NAME }}
        LOGZ_IO_HOSTING_NAME: Azure

    - name: Add nuget feed
      run: |
        dotnet nuget add source --username ${{ secrets.PACKAGE_USER }} --password ${{ secrets.PACKAGE_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/airslip-ltd/index.json"
        nuget sources add -name "github" -Source "https://nuget.pkg.github.com/airslip-ltd/index.json" -UserName ${{ secrets.PACKAGE_USER }} -Password ${{ secrets.PACKAGE_TOKEN }} -StorePasswordInClearTex

    - name: Install Terraform Modules
      run: nuget install Airslip.Terraform.Modules -Version ${{ env.TERRAFORM_MODULE_VERSION }} -OutputDirectory ./env/tf_modules -x

    - uses: cschleiden/replace-tokens@v1
      with:
        files: '["./env/variables/secrets.tfvars"]'
      env:
        API_KEY: ${{ secrets.API_KEY }}
        LOGZ_IO_LOG_LEVEL: Information
        CERTIFICATE_PASSWORD: ${{ secrets.AIRSLIP_CERTIFICATE_PASSWORD }}
        SHOPIFY_API_KEY: ${{ secrets.SHOPIFY_API_KEY }}
        SHOPIFY_API_SECRET: ${{ secrets.SHOPIFY_API_SECRET }}
        SQUARESPACE_API_KEY: ${{ secrets.SQUARESPACE_API_KEY }}
        SQUARESPACE_API_SECRET: ${{ secrets.SQUARESPACE_API_SECRET }}
        ECWID_API_KEY: ${{ secrets.ECWID_API_KEY }}
        ECWID_API_SECRET: ${{ secrets.ECWID_API_SECRET }}
        EBAY_API_KEY: ${{ secrets.EBAY_API_KEY }}
        EBAY_API_SECRET: ${{ secrets.EBAY_API_SECRET }}
        EBAY_APP_NAME: ${{ secrets.EBAY_APP_NAME }}
        BIGCOMMERCEAPI_API_KEY: ${{ secrets.BIGCOMMERCEAPI_API_KEY }}
        BIGCOMMERCEAPI_API_SECRET: ${{ secrets.BIGCOMMERCEAPI_API_SECRET }}
        ETSYAPIV3_API_KEY: ${{ secrets.ETSYAPIV3_API_KEY }}
        ETSYAPIV3_API_SECRET: ${{ secrets.ETSYAPIV3_API_SECRET }}
        THREED_CART_API_KEY: ${{ secrets.THREED_CART_API_KEY }}
        THREED_CART_API_SECRET: ${{ secrets.THREED_CART_API_SECRET }}
        AMAZON_SP_API_KEY: ${{ secrets.AMAZON_SP_API_KEY }}
        AMAZON_SP_API_SECRET: ${{ secrets.AMAZON_SP_API_SECRET }}
        AMAZON_SP_APP_NAME: ${{ secrets.AMAZON_SP_APP_NAME }}
        AMAZON_SP_ENVIRONMENT: ${{ secrets.AMAZON_SP_ENVIRONMENT }}
        AMAZON_SP_LOCATION: ${{ secrets.AMAZON_SP_LOCATION }}
        AMAZON_SP_ROLE: ${{ secrets.AMAZON_SP_ROLE }}
        AMAZON_SP_USER_ID: ${{ secrets.AMAZON_SP_USER_ID }}
        AMAZON_SP_USER_SECRET: ${{ secrets.AMAZON_SP_USER_SECRET }}
        XERO_API_KEY: ${{ secrets.XERO_API_KEY }}
        XERO_API_SECRET: ${{ secrets.XERO_API_SECRET }}
        QUICKBOOKSONLINE_API_KEY: ${{ secrets.QUICKBOOKSONLINE_API_KEY }}
        QUICKBOOKSONLINE_API_SECRET: ${{ secrets.QUICKBOOKSONLINE_API_SECRET }}
        STRIPE_API_KEY: ${{ secrets.STRIPE_API_KEY }}
        STRIPE_API_SECRET: ${{ secrets.STRIPE_API_SECRET }}
        ZETTLE_API_KEY: ${{ secrets.ZETTLE_API_KEY }}
        ZETTLE_API_SECRET: ${{ secrets.ZETTLE_API_SECRET }}
        SQUARE_API_KEY: ${{ secrets.SQUARE_API_KEY }}
        SQUARE_API_SECRET: ${{ secrets.SQUARE_API_SECRET }}
        SQUARE_AUTHORISATION_BASE_URI: ${{ secrets.SQUARE_AUTHORISATION_BASE_URI }}
        SQUARE_AUTHORISE_PATH_URI: ${{ secrets.SQUARE_AUTHORISE_PATH_URI }}
        CLOVER_API_KEY: ${{ secrets.CLOVER_API_KEY }}
        CLOVER_API_SECRET: ${{ secrets.CLOVER_API_SECRET }}
        CLOVER_AUTHORISATION_BASE_URI: ${{ secrets.CLOVER_AUTHORISATION_BASE_URI }}
        CLOVER_AUTHORISE_PATH_URI: ${{ secrets.CLOVER_AUTHORISE_PATH_URI }}
        LSRSERIES_API_KEY: ${{ secrets.LSRSERIES_API_KEY }}
        LSRSERIES_API_SECRET: ${{ secrets.LSRSERIES_API_SECRET }}
        SUMUP_API_KEY: ${{ secrets.SUMUP_API_KEY }}
        SUMUP_API_SECRET: ${{ secrets.SUMUP_API_SECRET }}


    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_PROD_DEPLOY }}
      
    - name: Terraform Update
      id: "terraform_update"
      env:
        ARM_CLIENT_ID: ${{ secrets.NON_PROD_ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.NON_PROD_ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.NON_PROD_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.NON_PROD_ARM_TENANT_ID }}
      run: |
        az config set extension.use_dynamic_install=yes_without_prompt
        terraform init -backend-config=variables/${{ env.ENVIRONMENT_NAME_SHORT }}/backend.tfvars
        terraform plan -var-file=variables/${{ env.ENVIRONMENT_NAME_SHORT }}/variables.tfvars -var-file=variables/secrets.tfvars -out=terraform.tfplan
        terraform apply terraform.tfplan
        resource_group_name_raw=$(terraform output resource_group_name)
        resource_group_name=$(echo "${resource_group_name_raw}" | sed 's/"//g')
        processor_app_service_name_raw=$(terraform output -json function_app_names | jq -r '.[0]')
        processor_app_service_name=$(echo "${processor_app_service_name_raw}" | sed 's/"//g')
        echo "::set-output name=resource_group_name::${resource_group_name}"
        echo "::set-output name=processor_app_service_name::${processor_app_service_name}"

      working-directory: ./env

    - name: Write Outputs
      run: |
        echo "${{ steps.terraform_update.outputs.resource_group_name }}"
        echo "${{ steps.terraform_update.outputs.processor_app_service_name }}"

    - name: Build
      run: dotnet build ${{ env.BUILD_PATH }}

    - name: Publish the Processor Function App
      run: dotnet publish ${{ env.PUBLISH_PATH }} -c Release -o ProcessorApp

    - name: Get AppService publish profile
      id: publishprofile_processor
      uses: aliencube/publish-profile-actions@v1
      env:
        AZURE_CREDENTIALS: ${{ secrets.AZURE_PROD_DEPLOY }}
      with:
        resourceGroupName: ${{ steps.terraform_update.outputs.resource_group_name }}
        appName: ${{ steps.terraform_update.outputs.processor_app_service_name }}

    - name: 'Deploy Processor Function App'
      uses: Azure/functions-action@v1
      id: function_app_processor
      with:
        app-name: ${{ steps.terraform_update.outputs.processor_app_service_name }}
        package: ./ProcessorApp
        publish-profile: ${{ steps.publishprofile_processor.outputs.profile }}

    - name: Verify security headers
      uses: marcuslindblom/security-headers@main
      with:
        url: ${{ secrets.SECURITY_HEADERS_URL }}
        followRedirects: true
        grade: A